<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.flus.cms.core.dao.mapper.ReplyEntityMapper" >
  <resultMap id="BaseResultMap" type="cn.flus.cms.core.dao.domain.ReplyEntity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="topic_id" property="topicId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="author_id" property="authorId" jdbcType="BIGINT" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="recommend" property="recommend" jdbcType="CHAR" />
    <result column="praise_count" property="praiseCount" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="delete_flag" property="deleteFlag" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.flus.cms.core.dao.domain.ReplyEntity" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, topic_id, status, author_id, author, recommend, praise_count, create_time, delete_flag
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  
  <insert id="insert" parameterType="cn.flus.cms.core.dao.domain.ReplyEntity" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" >
      select last_insert_id()
    </selectKey>
    insert into reply (id, topic_id, status, 
      author_id, author, recommend, 
      praise_count, create_time, delete_flag, 
      content)
    values (#{id,jdbcType=INTEGER}, #{topicId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{authorId,jdbcType=BIGINT}, #{author,jdbcType=VARCHAR}, #{recommend,jdbcType=CHAR}, 
      #{praiseCount,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{deleteFlag,jdbcType=CHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  
  <select id="selectByOrderdTopicId" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from reply
	where topic_id = #{topicId,jdbcType=INTEGER}
    <if test="status != null">
      and status = #{status,jdbcType=INTEGER}
    </if>
    and delete_flag = 'n'
    order by recommend desc, create_time desc
    limit #{start}, #{size}
  </select>
  <select id="countSelectByOrderdTopicId" resultType="java.lang.Integer" >
    select count(id)
    from reply
	where topic_id = #{topicId,jdbcType=INTEGER}
    <if test="status != null">
      and status = #{status,jdbcType=INTEGER}
    </if>
    and delete_flag = 'n'
  </select>
  
  <update id="updateStatus">
    update reply 
    set status = #{status,jdbcType=INTEGER}
    where id in
	<foreach collection="ids" item="item" index="index" open="(" separator="," close=")">
	  #{item}
	</foreach>
	and delete_flag = 'n'
  </update>
  
  <update id="updateRecommend">
    update reply 
    set recommend = #{recommend,jdbcType=CHAR}
    where id in
	<foreach collection="ids" item="item" index="index" open="(" separator="," close=")">
	  #{item}
	</foreach>
	and delete_flag = 'n'
  </update>
  
  <update id="updateDeleteFlag">
    update reply 
    set delete_flag = 'y'
    where id in
	<foreach collection="ids" item="item" index="index" open="(" separator="," close=")">
	  #{item}
	</foreach>
  </update>
</mapper>